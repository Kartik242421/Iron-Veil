//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player1ActionMap"",
            ""id"": ""1bbb79c8-158b-4a6e-95f1-346858f79005"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""c763145d-db86-4e64-8f6f-8a06e7cfa769"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LightPunch"",
                    ""type"": ""Button"",
                    ""id"": ""0d3331dd-c092-4843-900a-cbec859be4c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyPunch"",
                    ""type"": ""Button"",
                    ""id"": ""f3d95e71-359c-4c5b-8eec-c065072351b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LightKick"",
                    ""type"": ""Button"",
                    ""id"": ""eb1480cb-6cc2-4003-b24a-a8b54ecc1821"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyKick"",
                    ""type"": ""Button"",
                    ""id"": ""243228dc-d2dd-431f-9130-4013337f5cec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""5fa92e0c-c183-4f09-b597-e63220a34dee"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c9329854-f5b3-4143-be70-401da8183ede"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""20555cbf-5333-408c-ad51-5915e8d6eb04"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bfbb07e2-c063-4370-a27f-bd5bc39c18b6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4db20071-1500-4e5e-a995-9c4a9bf58b55"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""52e6e4e8-9329-4059-9ec9-b33e5ebe4854"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""264137a1-1e54-4ec8-b08f-e82de3126926"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6b12c616-dd4b-4173-975f-51fc02068b51"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""23303477-b790-4190-aa0f-2b7f69348c98"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""25ec10c4-567b-4f25-a955-27765ff7c0d0"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left Joystick"",
                    ""id"": ""0dec1715-d215-41d6-8743-5f4c02a6dcb7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""86d82537-e4c9-4ecc-bd22-fb15c6061bde"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""914319eb-35ee-401b-8b46-4af291e609e2"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5ddfb272-511c-4f2e-b696-c9c9e957257e"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""436e7f41-5f37-4f3a-9587-ddcba9a171b6"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7ac28df1-9ba8-4447-acb4-5d4e22665c77"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9260461-0370-49d4-8b34-676cf23fb120"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""418771fa-4070-46fd-8422-ea478de990a4"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76d4b5fb-9da3-4159-ae53-eb058e75d93a"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa8f4f11-f8d1-41b2-91d9-b3f75f941d61"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightKick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c1f1b62-d313-417a-94ce-4fb722f405d5"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightKick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0e21f8a-9966-49de-809b-1fb4b3573233"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyKick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e29c0e08-e417-4af3-a995-2fe80595752e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyKick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player1ActionMap
        m_Player1ActionMap = asset.FindActionMap("Player1ActionMap", throwIfNotFound: true);
        m_Player1ActionMap_Movement = m_Player1ActionMap.FindAction("Movement", throwIfNotFound: true);
        m_Player1ActionMap_LightPunch = m_Player1ActionMap.FindAction("LightPunch", throwIfNotFound: true);
        m_Player1ActionMap_HeavyPunch = m_Player1ActionMap.FindAction("HeavyPunch", throwIfNotFound: true);
        m_Player1ActionMap_LightKick = m_Player1ActionMap.FindAction("LightKick", throwIfNotFound: true);
        m_Player1ActionMap_HeavyKick = m_Player1ActionMap.FindAction("HeavyKick", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player1ActionMap
    private readonly InputActionMap m_Player1ActionMap;
    private List<IPlayer1ActionMapActions> m_Player1ActionMapActionsCallbackInterfaces = new List<IPlayer1ActionMapActions>();
    private readonly InputAction m_Player1ActionMap_Movement;
    private readonly InputAction m_Player1ActionMap_LightPunch;
    private readonly InputAction m_Player1ActionMap_HeavyPunch;
    private readonly InputAction m_Player1ActionMap_LightKick;
    private readonly InputAction m_Player1ActionMap_HeavyKick;
    public struct Player1ActionMapActions
    {
        private @PlayerInput m_Wrapper;
        public Player1ActionMapActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player1ActionMap_Movement;
        public InputAction @LightPunch => m_Wrapper.m_Player1ActionMap_LightPunch;
        public InputAction @HeavyPunch => m_Wrapper.m_Player1ActionMap_HeavyPunch;
        public InputAction @LightKick => m_Wrapper.m_Player1ActionMap_LightKick;
        public InputAction @HeavyKick => m_Wrapper.m_Player1ActionMap_HeavyKick;
        public InputActionMap Get() { return m_Wrapper.m_Player1ActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player1ActionMapActions set) { return set.Get(); }
        public void AddCallbacks(IPlayer1ActionMapActions instance)
        {
            if (instance == null || m_Wrapper.m_Player1ActionMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player1ActionMapActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @LightPunch.started += instance.OnLightPunch;
            @LightPunch.performed += instance.OnLightPunch;
            @LightPunch.canceled += instance.OnLightPunch;
            @HeavyPunch.started += instance.OnHeavyPunch;
            @HeavyPunch.performed += instance.OnHeavyPunch;
            @HeavyPunch.canceled += instance.OnHeavyPunch;
            @LightKick.started += instance.OnLightKick;
            @LightKick.performed += instance.OnLightKick;
            @LightKick.canceled += instance.OnLightKick;
            @HeavyKick.started += instance.OnHeavyKick;
            @HeavyKick.performed += instance.OnHeavyKick;
            @HeavyKick.canceled += instance.OnHeavyKick;
        }

        private void UnregisterCallbacks(IPlayer1ActionMapActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @LightPunch.started -= instance.OnLightPunch;
            @LightPunch.performed -= instance.OnLightPunch;
            @LightPunch.canceled -= instance.OnLightPunch;
            @HeavyPunch.started -= instance.OnHeavyPunch;
            @HeavyPunch.performed -= instance.OnHeavyPunch;
            @HeavyPunch.canceled -= instance.OnHeavyPunch;
            @LightKick.started -= instance.OnLightKick;
            @LightKick.performed -= instance.OnLightKick;
            @LightKick.canceled -= instance.OnLightKick;
            @HeavyKick.started -= instance.OnHeavyKick;
            @HeavyKick.performed -= instance.OnHeavyKick;
            @HeavyKick.canceled -= instance.OnHeavyKick;
        }

        public void RemoveCallbacks(IPlayer1ActionMapActions instance)
        {
            if (m_Wrapper.m_Player1ActionMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer1ActionMapActions instance)
        {
            foreach (var item in m_Wrapper.m_Player1ActionMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player1ActionMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player1ActionMapActions @Player1ActionMap => new Player1ActionMapActions(this);
    public interface IPlayer1ActionMapActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLightPunch(InputAction.CallbackContext context);
        void OnHeavyPunch(InputAction.CallbackContext context);
        void OnLightKick(InputAction.CallbackContext context);
        void OnHeavyKick(InputAction.CallbackContext context);
    }
}
